# This Terraform configuration file sets up a basic AWS infrastructure using gitbash
# and I dont use any existing instances to create this Infrastructure.
# It includes an EC2 instance, an S3 bucket, an EBS volume, an IAM user, a VPC, and a subnet.
# Ensure you have the AWS CLI configured with your credentials before running this script.
# To run this script, save it as main.tf and execute the following commands in your terminal:
# 1. Initialize Terraform: `terraform init`
# 2. Plan the deployment: `terraform plan`
# 3. Apply the configuration: `terraform apply` and destory the resources using `terraform destroy` when done.
# Note: Replace the access_key and secret_key with your actual AWS credentials.
# Ensure you have the necessary permissions to create these resources in your AWS account.
# This script is intended for educational purposes and should be used with caution in production environments.

  
# Main.tf
terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "6.4.0"
    }
    }
}

provider  "aws" {
region = "ap-south-1"
access_key = "__"                                                      --------> your Access key
secret_key = "__"                                                      --------> your secret Key 
}

resource "aws_instance" "one" {
  ami           = "__"                                                 --------------------> Your Machine Image Id
  instance_type = "t2.micro"
  tags = {
    Name = "prod-instance"
  }
}

resource "aws_s3_bucket" "two" {
bucket = "prod-bucket"
}

resource "aws_ebs_volume" "three" {
size = 15
availability_zone = "ap-south-1a"                    
tags = { name = "prod-volume"
}
}

resource "aws_iam_user" "four" {
    name = "prod-user"
    }

resource "aws_vpc" "five" {           <-------|               #note: This VPC Attach to the subnet Just write the label name and .id then terraform automatically Sync.
cidr_block = "10.0.0.0/16"                    |
tags = {                                      |
    Name = "prod-vpc"                         |                       
  }                                           |
}                                             |
                                              |
resource "aws_subnet" "six" {                 |
  vpc_id            = aws_vpc.five.id    <----|
  cidr_block        = "10.0.1.0/16"
    availability_zone = "ap-south-1a"
    tags = {
    Name = "prod-subnet"
    }
}
